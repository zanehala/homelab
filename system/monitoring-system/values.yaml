kube-prometheus-stack:
  grafana:
    adminPassword: null
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - &host grafana.zanelab.com
      tls:
        - secretName: grafana-general-tls
          hosts:
            - *host
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://loki.loki:3100
    persistence:
      type: pvc
      enabled: true
      storageClassName: longhorn
      accessModes:
        - ReadWriteOnce
      size: 5Gi

  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      enableRemoteWriteReceiver: true
      retention: 730d
      additionalScrapeConfigs:
        - job_name: "hass"
          metrics_path: /api/prometheus
          scrape_interval: 60s
          authorization:
            credentials: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJmZWEwM2JiMDgzYjY0MTkyYWFlNzM4NGQyOTU0YjFkZCIsImlhdCI6MTY3MzIwMDYxMiwiZXhwIjoxOTg4NTYwNjEyfQ.g2uIEL92OzKFjvdbt_Kbs1to5wqo--PQWFeuMwWpT6E"
          scheme: https
          static_configs:
            - targets: ['ha.zanelab.com']
        - job_name: "pfsense"
          scrape_interval: 60s
          scheme: http
          static_configs:
            - targets: ['192.168.1.1:9111']
        - job_name: "rtlamr-exporter"
          scrape_interval: 60s
          scheme: http
          static_configs:
            - targets: ['192.168.1.245:9090']
        - job_name: kubernetes-service-endpoints
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:

          # annotation 'prometheus.io/scrape' must be set to 'true'
          - action: keep
            regex: true
            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]

          # service cannot be in kube-system or prom namespaces
          - action: drop
            regex: (kube-system|prom)
            source_labels: [__meta_kubernetes_namespace]

          # service port name must end with word 'metrics'
          - action: keep
            regex: .*metrics
            source_labels: [__meta_kubernetes_service_port_name]

          # allow override of http scheme
          - action: replace
            regex: (https?)
            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            target_label: __scheme__

          # allow override of default /metrics path
          - action: replace
            regex: (.+)
            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            target_label: __metrics_path__

          # allow override of default port
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            target_label: __address__
          - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}
          - action: replace
            source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace
          - action: replace
            source_labels: [__meta_kubernetes_service_name]
            target_label: kubernetes_name
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: freenas-nfs-csi
            accessModes: 
              - ReadWriteMany
            resources:
              requests:
                storage: 250Gi

  prometheus-node-exporter:
    extraArgs:
      - --collector.processes
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$